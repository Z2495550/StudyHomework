{"name": "test_mult[float]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0.04 == 0.04000000000000001\n +  where 0.04000000000000001 = <bound method Calculator.mult of <pythoncode.calc.Calculator object at 0x1056684e0>>(0.2, 0.2)\n +    where <bound method Calculator.mult of <pythoncode.calc.Calculator object at 0x1056684e0>> = <pythoncode.calc.Calculator object at 0x1056684e0>.mult\n +      where <pythoncode.calc.Calculator object at 0x1056684e0> = <testing.test_cal.TestCalc object at 0x105672518>.cal", "trace": "self = <testing.test_cal.TestCalc object at 0x105672518>, a = 0.2, b = 0.2\nresult = 0.04\n\n    @pytest.mark.parametrize('a,b,result',mult_datas,ids=mults)\n    @pytest.mark.mult\n    def test_mult(self, a, b, result):\n>       assert result == self.cal.mult(a, b)\nE       assert 0.04 == 0.04000000000000001\nE        +  where 0.04000000000000001 = <bound method Calculator.mult of <pythoncode.calc.Calculator object at 0x1056684e0>>(0.2, 0.2)\nE        +    where <bound method Calculator.mult of <pythoncode.calc.Calculator object at 0x1056684e0>> = <pythoncode.calc.Calculator object at 0x1056684e0>.mult\nE        +      where <pythoncode.calc.Calculator object at 0x1056684e0> = <testing.test_cal.TestCalc object at 0x105672518>.cal\n\ntesting/test_cal.py:52: AssertionError"}, "parameters": [{"name": "a", "value": "0.2"}, {"name": "b", "value": "0.2"}, {"name": "result", "value": "0.04"}], "start": 1595067711987, "stop": 1595067711988, "uuid": "644f24f6-cd76-413d-b50d-80cedf259941", "historyId": "5f5cfe6d9105d8916011903c7a91fdc1", "fullName": "testing.test_cal.TestCalc#test_mult[float]", "labels": [{"name": "tag", "value": "mult"}, {"name": "parentSuite", "value": "testing"}, {"name": "suite", "value": "test_cal"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "zhangbijiangdeMacBook-Pro.local"}, {"name": "thread", "value": "25564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testing.test_cal"}]}